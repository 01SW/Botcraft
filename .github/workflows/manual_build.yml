name: Manual Build

on: 
  workflow_dispatch:
    inputs:
      minecraft_version:
        description: 'Minecraft version'
        required: true
        default: 'latest'

env:
  BUILD_TYPE: Release

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
        - {
            name: "Windows",
            os: windows-latest,
            generator: "Visual Studio 17 2022"
            
          }
        - {
            name: "Linux",
            os: ubuntu-latest,
            generator: "Unix Makefiles"
          }

    steps:
      - uses: actions/checkout@v3
      
      - name: Install GLFW deps
        if: ${{ matrix.config.name == 'Linux' }}
        run: |
          sudo apt update
          sudo apt install -y xorg-dev

      - name: Create build folder
        run: cmake -E make_directory ${{ runner.workspace }}/build

      - name: Configure cmake
        shell: bash
        working-directory: ${{ runner.workspace }}/build
        run: >
          cmake -G "${{ matrix.config.generator }}"
          -DCMAKE_BUILD_TYPE=$BUILD_TYPE
          -DGAME_VERSION=${{ github.event.inputs.minecraft_version }}
          -DBOTCRAFT_USE_OPENGL_GUI=ON
          -DBOTCRAFT_USE_IMGUI=ON
          -DBOTCRAFT_COMPRESSION=ON
          -DBOTCRAFT_ENCRYPTION=ON
          -DBOTCRAFT_BUILD_EXAMPLES=ON
          -DBOTCRAFT_BUILD_TESTS=ON
          -DBOTCRAFT_WINDOWS_BETTER_SLEEP=ON
          -DBOTCRAFT_FORCE_LOCAL_ZLIB=ON
          -DBOTCRAFT_FORCE_LOCAL_OPENSSL=ON
          -DBOTCRAFT_FORCE_LOCAL_GLFW=ON
          -DBOTCRAFT_FORCE_LOCAL_GLAD=ON
          -DBOTCRAFT_FORCE_LOCAL_CATCH=ON
          -DBOTCRAFT_DOWNLOAD_MC_ASSETS=OFF
          -DBOTCRAFT_USE_PRECOMPILED_HEADERS=ON
          -DCMAKE_INSTALL_PREFIX=install/botcraft
          -S $GITHUB_WORKSPACE
          -B .

      - name: Build all
        shell: bash
        working-directory: ${{ runner.workspace }}/build
        run: cmake --build . --config $BUILD_TYPE --parallel 2
      
      - name: Run tests
        working-directory: ${{ runner.workspace }}/build
        run: ctest -C $BUILD_TYPE

      - name: Create install
        shell: bash
        working-directory: ${{ runner.workspace }}/build
        run: cmake --build . --config $BUILD_TYPE --parallel 2 --target install

      - name: Create artifact archive
        shell: bash
        working-directory: ${{ runner.workspace }}/build/install
        run: cmake -E tar "cf" "botcraft.zip" --format=zip botcraft/

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: botcraft-${{ matrix.config.name }}
          path: ${{ runner.workspace }}/build/install/botcraft.zip
          retention-days: 1

      - name: Upload version artifact
        if: ${{ matrix.config.name == 'Linux' }}
        uses: actions/upload-artifact@v3
        with:
          name: MC-version
          path: ${{ runner.workspace }}/build/version.txt
          retention-days: 1

  update_latest:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download version artifact
        uses: actions/download-artifact@v3
        with:
          name: MC-version
          path: version

      - name: Retrieve MC game version
        id: mc-version
        uses: juliangruber/read-file-action@v1
        with:
          path:
            version/version.txt

      - name: Download Linux artifact
        uses: actions/download-artifact@v3
        with:
          name: botcraft-Linux
          path: linux

      - name: Upload Linux file to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: linux/botcraft.zip
          asset_name: botcraft-linux-${{ steps.mc-version.outputs.content }}.zip
          tag: latest

      - name: Download Windows artifact
        uses: actions/download-artifact@v3
        with:
          name: botcraft-Windows
          path: windows

      - name: Upload Windows file to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: windows/botcraft.zip
          asset_name: botcraft-windows-${{ steps.mc-version.outputs.content }}.zip
          tag: latest
